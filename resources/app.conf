# command line applications and sections to delete after load
[cli]
apps = list: ${cli_config_default:apps}, show_config_cli, app
cleanups = list: ${cli_config_default:cleanups}, app

# import command line apps
[import]
config_files = list:
    resource(zensols.util): resources/default.conf,
    resource(zensols.util): resources/escape.conf,
    resource(zensols.util): resources/cli.conf,
    resource(zensols.util): resources/cli-config.conf

# configuration files are optional
[config_cli]
expect = False

[config_import]
# the test configuration file needs interpolates the following sections
references = list: conf_esc, package, default

[config_imp]
# source the config file for forward propogating option interpolation; then
# source the object factory sections, finally source the configuration file
# again for any section overwrites
type = import
config_files = list: 
    ^{override},
    ^{config_path},
    resource(zensols.mednlp): resources/default.conf,
    resource(zensols.mimic): resources/default.conf,
    ^{config_path},
    resource(zensols.nlp): resources/obj.conf,
    resource(zensols.nlp): resources/mapper.conf,
    resource(zensols.mednlp): resources/install.conf,
    resource(zensols.mednlp): resources/lang.conf,
    resource(zensols.mimic): resources/obj.conf,
    resource(zensols.mimic): resources/decorator.conf,
    ^{config_path}

[app]
class_name = zensols.mimic.Application
doc_parser = instance: ${mednlp_default:doc_parser}
corpus = instance: mimic_corpus

[app_decorator]
mnemonic_overrides = dict:{
  'write_discharge': 'discharge',
  'corpus_stats': 'stats',
  'unmatched_tokens': 'badtoks',
  'write_note_by_categories': 'dumpnotes',
  'write_note': 'note',
   'write_note_categories': 'notecats'}
option_excludes = dict: {'doc_parser', 'corpus'}
option_overrides = dict: {'output_file': {'long_name': 'output', 'short_name': 'o'}}
